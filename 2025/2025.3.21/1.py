import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()

db_file = "todo.db"


def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn


def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)",
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")


def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(
                f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")


def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")


def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")


def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?",
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")


def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?",
                   (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(
                f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")


def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")


def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc,
                        new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")


if __name__ == "__main__":
    main()

db_file = "todo.db"


def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn


def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)",
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")


def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(
                f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")


def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")


def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")


def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?",
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")


def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?",
                   (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(
                f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")


def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")


def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc,
                        new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")


if __name__ == "__main__":
    main()

db_file = "todo.db"


def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn


def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)",
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")


def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(
                f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")


def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")


def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")


def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?",
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")


def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?",
                   (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(
                f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")


def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")


def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc,
                        new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")


if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
import sqlite3
import os
import datetime

db_file = "todo.db"

def connect_db():
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            description TEXT,
            due_date TEXT,
            priority INTEGER DEFAULT 1,
            completed INTEGER DEFAULT 0,
            created_at TEXT DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    return conn

def add_task(title, description="", due_date=None, priority=1):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("INSERT INTO tasks (title, description, due_date, priority) VALUES (?, ?, ?, ?)", 
                   (title, description, due_date, priority))
    conn.commit()
    conn.close()
    print("✔ Tapşırıq əlavə olundu!")

def list_tasks(show_completed=False):
    conn = connect_db()
    cursor = conn.cursor()
    query = "SELECT * FROM tasks"
    if not show_completed:
        query += " WHERE completed = 0"
    query += " ORDER BY priority DESC, due_date ASC"
    cursor.execute(query)
    tasks = cursor.fetchall()
    conn.close()
    print("\n📌 Tapşırıqlar:\n")
    if tasks:
        for task in tasks:
            status = "✅" if task[5] else "❌"
            print(f"[{task[0]}] {status} {task[1]} - {task[2]} (Son tarix: {task[3]}) (Prioritet: {task[4]})")
    else:
        print("🚀 Tapşırıq yoxdur!")

def complete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET completed = 1 WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🎯 Tapşırıq tamamlandı!")

def delete_task(task_id):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()
    print("🗑 Tapşırıq silindi!")

def update_task(task_id, new_title, new_description, new_due_date, new_priority):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET title = ?, description = ?, due_date = ?, priority = ? WHERE id = ?", 
                   (new_title, new_description, new_due_date, new_priority, task_id))
    conn.commit()
    conn.close()
    print("✏ Tapşırıq yeniləndi!")

def search_tasks(keyword):
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM tasks WHERE title LIKE ? OR description LIKE ?", (f'%{keyword}%', f'%{keyword}%'))
    tasks = cursor.fetchall()
    conn.close()
    print("\n🔍 Axtarış nəticələri:")
    if tasks:
        for task in tasks:
            print(f"[{task[0]}] {task[1]} - {task[2]} (Son tarix: {task[3]}, Prioritet: {task[4]})")
    else:
        print("❌ Heç bir uyğun tapşırıq tapılmadı!")

def clear_database():
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute("DROP TABLE IF EXISTS tasks")
    conn.commit()
    conn.close()
    print("🧹 Bütün tapşırıqlar silindi!")

def main():
    while True:
        print("\n===== TODO LIST CLI =====")
        print("1. Tapşırıq əlavə et")
        print("2. Tapşırıqları göstər")
        print("3. Tamamlanmış tapşırıqları göstər")
        print("4. Tapşırığı tamamla")
        print("5. Tapşırığı sil")
        print("6. Tapşırığı yenilə")
        print("7. Tapşırıq axtar")
        print("8. Bütün tapşırıqları sil")
        print("9. Çıxış")
        choice = input("Seçim edin: ")
        if choice == "1":
            title = input("Tapşırıq başlığı: ")
            desc = input("Təsvir: ")
            due_date = input("Son tarix (YYYY-MM-DD): ")
            priority = int(input("Prioritet (1-5): "))
            add_task(title, desc, due_date, priority)
        elif choice == "2":
            list_tasks()
        elif choice == "3":
            list_tasks(show_completed=True)
        elif choice == "4":
            task_id = int(input("Tapşırıq ID: "))
            complete_task(task_id)
        elif choice == "5":
            task_id = int(input("Tapşırıq ID: "))
            delete_task(task_id)
        elif choice == "6":
            task_id = int(input("Tapşırıq ID: "))
            new_title = input("Yeni başlıq: ")
            new_desc = input("Yeni təsvir: ")
            new_due_date = input("Yeni son tarix (YYYY-MM-DD): ")
            new_priority = int(input("Yeni prioritet (1-5): "))
            update_task(task_id, new_title, new_desc, new_due_date, new_priority)
        elif choice == "7":
            keyword = input("Axtarış sözü: ")
            search_tasks(keyword)
        elif choice == "8":
            confirm = input("⚠ Bütün tapşırıqlar silinəcək. Davam? (b/x): ")
            if confirm.lower() == "b":
                clear_database()
        elif choice == "9":
            print("👋 Çıxış edilir...")
            break
        else:
            print("❌ Yanlış seçim!")

if __name__ == "__main__":
    main()
